<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>

	<class name="org.framestudy.spring_hibernate.usermag.beans.UserBean" catalog="spring_hibernate" table="t_user">
		<id name="id" type="java.lang.Long">
			<column name="id"></column>
			<generator class="identity"></generator>
			<!-- 数据库ID生产策略
				identity 自增长，这个自增长是有数据库来负责，应用程序与框架不负责
				increment 自增长，这个自增长是有框架来负责产生，数据库与应用程序不负责
				uuid.hex  使用一种128位的UUID算法得到的一个不重复的32位字符串，通常在系统高并发情况下使用
				assigned 	框架与数据库都不负责，而是用应用程序用过调用setId()来完成设置
				foreign  这种生成ID的方式，通常是配置1-1主键关联的时候，很少见				
			 -->
		</id>
		<property name="userName" type="java.lang.String">
			<column name="user_name" length="20"></column>
		</property>
	
		<property name="loginName" type="java.lang.String">
			<column name="login_name" length="20"></column>
		</property>
	
		<property name="pwd" type="java.lang.String">
			<column name="password" length="32"></column>
		</property>
	
			<property name="age" type="java.lang.Integer">
			<column name="age"></column>
		</property>
	</class>
	
	<query name="org.framestudy.spring_hibernate.usermag.dao.impl.UserDaoImpl.findUserListByUserName">
		<![CDATA[
			From UserBean as user where user.userName like CONCAT(:userName,'%')
		]]>
	</query>
	
	
	
	
	
	
</hibernate-mapping>